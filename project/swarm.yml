version: '3'

services:
  broker-service:
    image: 'muhlegard/broker-service:1.0.1'
    deploy:
      mode: replicated
      replicas: 1
  
  listener-service:
    image: 'muhlegard/listener-service:1.0.0'
    deploy:
      mode: replicated
      replicas: 1
  
  authentication-service:
    image: 'muhlegard/authentication-service:1.0.0'
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - DNS=host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=Utc connect_timeout=5 

  logger-service:
    image: 'muhlegard/logger-service:1.0.0'
    deploy:
      mode: replicated
      replicas: 1

  mail-service:
    image: 'muhlegard/mail-service:1.0.0'
    deploy:
      mode: replicated
      replicas: 1
    environment:
      environment:
      MAIL_DOMAIN: localhost
      MAIL_PORT: 1025
      MAIL_HOST: mailhog
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: none
      MAIL_FROM_NAME: "John Smith"
      MAIL_FROM_ADDRESS: john.smith@example.com

  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "5672:5672"
      - "15672:15672"
    deploy:
      mode: global
    command: >
      bash -c "
        rabbitmq-server &
        sleep 10 &&
        rabbitmqctl add_user rabbitmq password &&
        rabbitmqctl set_user_tags rabbitmq administrator &&
        rabbitmqctl set_permissions -p / rabbitmq '.*' '.*' '.*' &&
        wait %%1
      "

  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - '8025:8025'
    deploy:
      mode: replicated
      replicas: 1

  mongo:
    image: 'mongo:4.2.17-bionic'
    ports:
      - '27017:27017'
    deploy:
      mode: global
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: guest
      MONGO_INITDB_ROOT_PASSWORD: guest
    volumes:
      - ./db-data/mongo/:/data/db

  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  front-end:
    image: 'muhlegard/front-end:1.0.1'
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - BROKER_URL=http://backend

  caddy:
    image: 'muhlegard/micro-caddy:1.0.0'
    ports:
      - "80:80"
      - "443:443"
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - caddy_data:/data
      - caddy_config:/config
      - caddy_logs:/logs

volumes:
  caddy_data:
    external: true
  caddy_config:
  caddy_logs: