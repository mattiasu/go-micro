version: '3'

services:

  front-end:
    build: 
      context: ./../front-end
      dockerfile: ./../front-end/front-end.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - BROKER_URL=http://backend
      
  broker-service:
    build: 
      context: ./../broker-service
      dockerfile: ./../broker-service/broker-service.dockerfile
    restart: always
    ports:
      - "8080:8080"
    deploy:
      mode: replicated
      replicas: 1
  
  mail-service:
    build: 
      context: ./../mail-service
      dockerfile: ./../mail-service/mail-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MAIL_DOMAIN: localhost
      MAIL_PORT: 1025
      MAIL_HOST: mailhog
      MAIL_USERNAME: ""
      MAIL_PASSWORD: ""
      MAIL_ENCRYPTION: None
      MAIL_FROM_NAME: "Mattias"
      MAIL_FROM_ADDRESS: me@example.com
  
  logger-service:
    build: 
      context: ./../logger-service
      dockerfile: ./../logger-service/logger-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  authentication-service:
    build: 
      context: ./../authentication-service
      dockerfile: ./../authentication-service/authentication-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      - DNS=host=postgres port=5432 user=postgres password=password dbname=users sslmode=disable timezone=Utc connect_timeout=5 

  listener-service:
    build: 
      context: ./../listener-service
      dockerfile: ./../listener-service/listener-service.dockerfile
    restart: always
    deploy:
      mode: replicated
      replicas: 1
  
  postgres:
    image: 'postgres:14.2'
    ports:
      - "5432:5432"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - ./db-data/postgres/:/var/lib/postgresql/data/

  mongo:
    image: 'mongo:4.2.16-bionic'
    ports:
      - "27017:27017"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      MONGO_INITDB_DATABASE: logs
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
    volumes:
      - ./db-data/mongo/:/data/db


  mailhog:
    image: 'mailhog/mailhog:latest'
    ports:
      - "1025:1025"
      - "8025:8025"
    restart: always
    deploy:
      mode: replicated
      replicas: 1

  rabbitmq:
    image: 'rabbitmq:3.9-alpine'
    ports:
      - "5672:5672"
      - "15672:15672"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_DEFAULT_VHOST: /
    volumes:
      - ./db-data/rabbitmq/:/var/lib/rabbitmq/

  nginx:
    image: 'nginx:1.21.3-alpine'
    ports:
      - "80:80"
    restart: always
    deploy:
      mode: replicated
      replicas: 1
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf